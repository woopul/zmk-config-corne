/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NUMPAD  3
#define SYMBOLS 4

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hm: homerow_mods {
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | GUI | LWR | SPC |   | ENT | BKSP  | RSE |

            bindings = <
&kp TAB    &kp Q       &kp W           &kp E         &kp R             &kp T        &kp Y        &kp U              &kp I        &kp O            &kp P          &kp TILDE
&kp LCTRL  &hm LGUI A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &kp G        &kp H        &hm RIGHT_SHIFT J  &hm RCTRL K  &hm RIGHT_ALT L  &hm RGUI SEMI  &kp SQT
&kp LSHFT  &kp Z       &kp X           &kp C         &kp V             &kp B        &kp N        &kp M              &kp COMMA    &kp DOT          &kp FSLH       &kp RALT
                                       &lt 3 ESCAPE  &lt 4 SPACE       &lt 2 TAB    &lt 1 ENTER  &kp BSPC           &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp LEFT_BRACE  &kp AMPS    &kp STAR              &kp BACKSLASH          &kp RIGHT_BRACE    &kp CARET    &kp AMPS     &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp COLON       &kp DOLLAR  &kp PERCENT           &kp CARET              &kp PLUS           &kp MINUS    &kp EQUAL    &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &kp TILDE       &kp EXCL    &kp AT                &kp HASH               &kp PIPE           &kp UNDER    &kp PLUS     &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &lt 1 ENTER  &lt 2 SPACE  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  7  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  4  |  5  |  6  | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |  1  |  2  |  3  |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp K_COPY  &kp K_UNDO     &kp K_CUT  &kp K_REDO  &kp LG(K_PASTE)  &kp BSPC
&trans      &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG    &kp LEFT    &kp DOWN       &kp UP     &kp RIGHT   &kp CAPSLOCK     &trans
&kp LSHFT   &trans           &trans           &trans           &trans           &trans             &kp HOME    &kp PAGE_DOWN  &kp PG_UP  &kp END     &kp INS          &trans
                                              &lt 3 ESCAPE     &kp LGUI         &lt 4 TAB          &kp RET     &trans         &kp BSPC
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &kp N7     &kp N8         &kp N9  &kp MINUS  &kp EQUAL        &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp N4     &kp N5         &kp N6  &kp PLUS   &kp KP_ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp N1     &kp N2         &kp N3  &kp N0     &kp KP_DIVIDE    &trans
                        &trans  &trans  &lt 4 TAB    &kp SPACE  &kp BACKSPACE  &trans
            >;
        };

        symbols_layer {
            bindings = <
&trans          &trans  &trans  &trans        &trans          &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp UNDER        &trans         &trans
&trans          &trans  &trans  &trans        &kp LEFT_SHIFT  &trans    &kp LBRC              &kp RBRC               &kp PLUS   &kp KP_MULTIPLY  &trans         &trans
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans          &trans    &kp LBKT              &kp RBKT               &kp EQUAL  &kp KP_DIVIDE    &kp LESS_THAN  &kp GREATER_THAN
                                &lt 3 ESCAPE  &trans          &trans    &kp N0                &kp BACKSPACE          &trans
            >;
        };
    };
};
