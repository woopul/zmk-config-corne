/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUMPAD  1
#define SYMBOLS 2
#define NAVIGATION 3
#define MAIN_SYMBOLS 4
#define HARDWARE 5

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hm: homerow_mods {
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | GUI | LWR | SPC |   | ENT | BKSP  | RSE |

            bindings = <
&trans       &kp Q       &kp W           &kp E         &kp R             &kp T        &kp Y        &kp U              &kp I         &kp O            &kp P          &trans
&lt 2 GRAVE  &hm LGUI A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &kp G        &kp H        &hm RIGHT_SHIFT J  &hm RCTRL K   &hm RIGHT_ALT L  &hm RGUI SEMI  &kp SQT
&mo 1        &kp Z       &kp X           &kp C         &kp V             &kp B        &kp N        &kp M              &kp COMMA     &kp DOT          &kp FSLH       &kp BACKSLASH
                                         &lt 1 ESCAPE  &lt 2 SPACE       &lt 3 TAB    &lt 4 ENTER  &kp BSPC           &lt 5 DELETE
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &kp N7    &kp N8  &kp N9  &kp MINUS  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp N4    &kp N5  &kp N6  &kp EQUAL  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp N1    &kp N2  &kp N3  &kp STAR   &kp SLASH  &trans
                        &trans  &trans  &lt 2 TAB    &kp PLUS  &kp N0  &trans
            >;
        };

        symbols_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDER   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp LESS_THAN     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp GRAVE   &kp LBRC              &kp RBRC               &kp EQUAL  &kp GREATER_THAN  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp DOLLAR  &kp LBKT              &kp RBKT               &trans     &trans            &trans
                        &trans  &trans  &trans    &kp PLUS    &trans                &trans
            >;
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  7  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  4  |  5  |  6  | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |  1  |  2  |  3  |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans         &kp LG(NUMBER_1)  &kp LG(N2)          &kp LG(N3)       &kp LG(N4)        &kp LG(LS(GRAVE))    &kp LG(C)  &kp LG(Z)      &kp LG(X)  &kp LG(LS(Z))  &kp LG(V)     &trans
&kp BACKSPACE  &mt LGUI LG(A)    &mt LEFT_ALT LG(S)  &mt LCTRL LG(C)  &mt LSHIFT LG(V)  &kp LG(GRAVE)        &kp LEFT   &kp DOWN       &kp UP     &kp RIGHT      &kp CAPSLOCK  &trans
&trans         &trans            &trans              &trans           &kp LG(Z)         &kp LG(LS(Z))        &kp HOME   &kp PAGE_DOWN  &kp PG_UP  &kp END        &kp INS       &trans
                                                     &trans           &trans            &trans               &trans     &kp BACKSPACE  &trans
            >;
        };

        main_symbols_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp LEFT_BRACE  &kp AMPS    &kp STAR              &kp BACKSLASH          &kp RIGHT_BRACE    &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp COLON       &kp DOLLAR  &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp TILDE       &kp EXCL    &kp AT                &kp HASH               &kp PIPE           &trans  &trans  &trans  &trans  &trans  &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &trans  &trans  &trans
            >;
        };

        hardware_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans           &trans           &trans             &trans  &trans  &trans
            >;
        };
    };
};
